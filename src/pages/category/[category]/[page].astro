---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/ListPosts'
import ListCategories from '@/components/ListCategories'
import TitlePage from '@/components/TitlePage'
import { sluglify, unsluglify, getCategories, getPosts } from '@/utils'
import { siteConfig } from '@/data/site.config'
import Pagination from '@/components/Pagination'

export async function getStaticPaths({ paginate }: any) {
	const categories = await getCategories()
	const allPosts = await getPosts()

	return categories.flatMap((category: string) => {
		const unsluglifyNameCategory = unsluglify(category!.toLowerCase())
		const filteredPosts = allPosts.filter(
			(post) => post.data.category.toLowerCase() === unsluglifyNameCategory
		)

		return paginate(filteredPosts, {
			params: {
				category: sluglify(category.toLowerCase())
			},
			pageSize: siteConfig.paginationSize
		})
	})
}
const params = Astro.params
const { page } = Astro.props

const unsluglifyNameCategory = unsluglify(params.category!.toLowerCase())
const posts = page.data

// Get the selected language from the URL
const url = new URL(Astro.url.href)
const selectedLanguage = url.pathname.split('/')[1] || siteConfig.defaultLanguage

// Filter posts by the selected language
const filteredPosts = posts.filter(post => post.data.language === selectedLanguage)
---

<BaseLayout
	title={params.category}
	description={`See all blog posts with the following category: ${params.category}/`}
	isNoIndex={true}
>
	<TitlePage title={unsluglifyNameCategory} />
	<ListCategories activeCategory={params.category} />
	<ListPosts posts={filteredPosts} />
	<Pagination page={page} />
</BaseLayout>
